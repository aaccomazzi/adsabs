// Generated by CoffeeScript 1.6.1
(function() {
  var $, do_postable_filter, do_postable_info, h, root,
    __hasProp = {}.hasOwnProperty;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  $ = jQuery;

  console.log("In Funcs");

  h = teacup;

  do_postable_info = function(sections, config, ptype) {
    return $.get(config.infoURL, function(data) {
      var content;
      if (ptype === 'library') {
        content = views.library_info(data, templates.library_itemsinfo);
      } else if (ptype === 'group') {
        content = views.group_info(data, templates.group_itemsinfo);
      }
      sections.$info.append(content + '<hr/>');
      return sections.$info.show();
    });
  };

  do_postable_filter = function(sections, config) {
    var loc, nonqloc, urla;
    $.get(config.tagsPURL, function(data) {
      var k, v, _ref, _results;
      _ref = data.tags;
      _results = [];
      for (k in _ref) {
        if (!__hasProp.call(_ref, k)) continue;
        v = _ref[k];
        _results.push(format_tags(k, sections.$tagssec, get_tags(v, config.tqtype), config.tqtype));
      }
      return _results;
    });
    $.get(config.itemsPURL, function(data) {
      var i, itemlist, itemsq, thecount, theitems;
      theitems = data.items;
      thecount = data.count;
      itemlist = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = theitems.length; _i < _len; _i++) {
          i = theitems[_i];
          _results.push("items=" + (encodeURIComponent(i.basic.fqin)));
        }
        return _results;
      })();
      itemsq = itemlist.join("&");
      return $.get("" + config.itPURL + "?" + itemsq, function(data) {
        var e, ido, k, notes, plinv, postings, stags, v, _ref, _ref1;
        _ref = get_taggings(data), stags = _ref[0], notes = _ref[1];
        postings = {};
        _ref1 = data.postings;
        for (k in _ref1) {
          if (!__hasProp.call(_ref1, k)) continue;
          v = _ref1[k];
          if (v[0] > 0) {
            postings[k] = (function() {
              var _i, _len, _ref2, _results;
              _ref2 = v[1];
              _results = [];
              for (_i = 0, _len = _ref2.length; _i < _len; _i++) {
                e = _ref2[_i];
                _results.push(e.thething.postfqin);
              }
              return _results;
            })();
          } else {
            postings[k] = [];
          }
        }
        ido = {
          stags: stags,
          postings: postings,
          notes: notes,
          $el: sections.$items,
          items: theitems,
          noteform: true,
          nameable: false,
          itemtype: 'ads/pub',
          memberable: config.memberable
        };
        plinv = new itemsdo.ItemsFilterView(ido);
        return plinv.render();
      });
    });
    loc = config.loc;
    nonqloc = loc.href.split('?')[0];
    if (sections.$ua.attr('data') === 'off') {
      if (nonqloc === loc.href) {
        urla = loc + "?userthere=true";
      } else {
        urla = loc + "&userthere=true";
      }
      sections.$ua.attr('href', urla);
      return sections.$ua.attr('data', 'on');
    }
  };

  root.postablefilter = {
    do_postable_info: do_postable_info,
    do_postable_filter: do_postable_filter
  };

}).call(this);
