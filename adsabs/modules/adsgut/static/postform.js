// Generated by CoffeeScript 1.6.1
(function() {
  var $, do_postform, h, root,
    __hasProp = {}.hasOwnProperty;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  $ = jQuery;

  console.log("In Funcs");

  h = teacup;

  do_postform = function(sections, config) {
    var $itemssec, itemsInfoURL, itemsTPURL, itemtype, loc, memberable, nam;
    itemsInfoURL = config.itemsInfoURL, itemsTPURL = config.itemsTPURL, memberable = config.memberable, itemtype = config.itemtype, nam = config.nam, loc = config.loc;
    $itemssec = sections.$itemssec;
    return $.get(itemsInfoURL, function(data) {
      var i, itemlist, itemsq, thecount, theitems;
      theitems = data.items;
      thecount = data.count;
      itemlist = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = theitems.length; _i < _len; _i++) {
          i = theitems[_i];
          _results.push("items=" + (encodeURIComponent(i.basic.fqin)));
        }
        return _results;
      })();
      itemsq = itemlist.join("&");
      console.log("ITEMSQAA", theitems, itemlist);
      return $.get("" + config.itemsTPURL + "?" + itemsq, function(data) {
        var e, ido, k, notes, plinv, postings, stags, v, _ref, _ref1;
        _ref = get_taggings(data), stags = _ref[0], notes = _ref[1];
        postings = {};
        _ref1 = data.postings;
        for (k in _ref1) {
          if (!__hasProp.call(_ref1, k)) continue;
          v = _ref1[k];
          if (v[0] > 0) {
            postings[k] = (function() {
              var _i, _len, _ref2, _results;
              _ref2 = v[1];
              _results = [];
              for (_i = 0, _len = _ref2.length; _i < _len; _i++) {
                e = _ref2[_i];
                _results.push(e.thething.postfqin);
              }
              return _results;
            })();
          } else {
            postings[k] = [];
          }
        }
        ido = {
          stags: stags,
          postings: postings,
          notes: notes,
          $el: $itemssec,
          items: theitems,
          noteform: false,
          nameable: nam,
          itemtype: itemtype,
          memberable: memberable,
          loc: loc
        };
        if (thecount === 1) {
          ido.noteform = true;
        }
        plinv = new itemsdo.ItemsView(ido);
        return plinv.render();
      });
    });
  };

  root.postform = {
    do_postform: do_postform
  };

}).call(this);
